{"version":3,"sources":["Components/About/About.js","Components/Post/Post.js","Components/Home/Home.js","Components/PostDetail/PostDetail.js","App.js","reportWebVitals.js","index.js"],"names":["About","Post","props","post","id","title","body","history","useHistory","onClick","url","push","showComment","Home","useState","posts","setPosts","useEffect","fetch","then","res","json","data","length","map","PostDetail","useParams","setPost","userId","App","to","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAUeA,EARD,WACV,OACI,8BACI,wD,QCeGC,EAjBF,SAACC,GAAW,IAAD,EACMA,EAAMC,KAAzBC,EADa,EACbA,GAAIC,EADS,EACTA,MAAOC,EADE,EACFA,KACZC,EAAUC,cAKhB,OACI,gCACI,mCAAK,iCAASJ,IAAaC,KAC3B,4BAAIC,IACJ,wBAAQG,QAAS,kBARL,SAACL,GACjB,IAAMM,EAAG,eAAWN,GACpBG,EAAQI,KAAKD,GAMcE,CAAYR,IAAnC,gCCQGS,EAnBF,WAAO,IAAD,EACWC,mBAAS,IADpB,mBACRC,EADQ,KACDC,EADC,KAQf,OANAC,qBAAU,WAENC,MADS,8CAERC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAI,OAAIN,EAASM,QACxB,IAEC,gCACI,8CACA,6CAAgBP,EAAMQ,OAAtB,YAEIR,EAAMS,KAAI,SAAArB,GAAI,OAAI,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKC,WCQ/CqB,EArBI,WAAO,IACfrB,EAAMsB,cAANtB,GADc,EAEEU,mBAAS,IAFX,mBAEdX,EAFc,KAERwB,EAFQ,KAGrBV,qBAAU,WACN,IAAMP,EAAG,qDAAiDN,GAC1Dc,MAAMR,GACLS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAM,SAAAG,GAAI,OAAIK,EAAQL,QACzB,CAAClB,IARkB,IAUdwB,EAAuBzB,EAAvByB,OAAQvB,EAAeF,EAAfE,MAAOC,EAAQH,EAARG,KACtB,OACI,gCACI,8DAAiCF,KACjC,+CAAkBwB,EAAlB,OACA,wCAAWvB,KACX,uCAAUC,SCmCPuB,EA3CH,WACV,OACE,8BACM,cAAC,IAAD,UACJ,gCACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,aAAT,4BAIJ,uBASA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,EAAD,iBCjCGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c83d715d.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div>\r\n            <h3>this is about compo</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Post = (props) => {\r\n    const {id, title, body} = props.post\r\n    const history = useHistory();\r\n    const showComment = (id)=> {\r\n        const url = `post/${id}`\r\n        history.push(url)\r\n    }\r\n    return (\r\n        <div>\r\n            <h3> <strong>{id}</strong>{title}</h3>\r\n            <p>{body}</p>\r\n            <button onClick={() => showComment(id)}>show comments </button>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React, { useEffect, useState } from 'react';\r\nimport Post from '../Post/Post';\r\n\r\nconst Home = () => {\r\n    const [posts, setPosts] = useState([])\r\n    useEffect(() =>{\r\n        const url = `https://jsonplaceholder.typicode.com/posts`\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then(data => setPosts(data))\r\n    } ,[])\r\n    return (\r\n        <div>\r\n            <h1>this is home</h1>\r\n            <h3>I have got {posts.length} posts</h3>\r\n            {\r\n                posts.map(post => <Post post={post} key={post.id}></Post>)\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nconst PostDetail = () => {\r\n    const {id} = useParams();\r\n    const [post, setPost] =useState({});\r\n    useEffect(() => {\r\n        const url = `https://jsonplaceholder.typicode.com/posts/${id}`\r\n        fetch(url)\r\n        .then(res => res.json())\r\n        .then (data => setPost(data))\r\n    },[id])\r\n    // console.log(post);\r\n    const {userId, title, body} = post\r\n    return (\r\n        <div>\r\n            <h3>this is  post detail of id: {id}</h3>\r\n            <p> user posted: {userId} </p>\r\n            <p>title: {title}</p>\r\n            <p>body: {body}</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PostDetail;","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport About from './Components/About/About';\nimport Home from './Components/Home/Home';\nimport PostDetail from './Components/PostDetail/PostDetail';\nconst App = () => {\n  return (\n    <div>\n          <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">Aout</Link>\n          </li>\n          <li>\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Home/>\n          </Route>\n          <Route path=\"/about\">\n            <About/>\n          </Route>\n          <Route path=\"/post/:id\">\n            <PostDetail/>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}